#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VivoWeb.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="VivoTourWeb")]
	public partial class VivoTourWebDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBookingDetail(BookingDetail instance);
    partial void UpdateBookingDetail(BookingDetail instance);
    partial void DeleteBookingDetail(BookingDetail instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertBooking(Booking instance);
    partial void UpdateBooking(Booking instance);
    partial void DeleteBooking(Booking instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertTourCategory(TourCategory instance);
    partial void UpdateTourCategory(TourCategory instance);
    partial void DeleteTourCategory(TourCategory instance);
    partial void InsertTour(Tour instance);
    partial void UpdateTour(Tour instance);
    partial void DeleteTour(Tour instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public VivoTourWebDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VivoTourWebDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VivoTourWebDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public VivoTourWebDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}

        public VivoTourWebDataContext() : base(global::System.Configuration.ConfigurationManager.ConnectionStrings["VivoTourWebConnectionString"].ConnectionString, mappingSource)
        {
			OnCreated();
        }

        public System.Data.Linq.Table<BookingDetail> BookingDetails
		{
			get
			{
				return this.GetTable<BookingDetail>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Booking> Bookings
		{
			get
			{
				return this.GetTable<Booking>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<TourCategory> TourCategories
		{
			get
			{
				return this.GetTable<TourCategory>();
			}
		}
		
		public System.Data.Linq.Table<Tour> Tours
		{
			get
			{
				return this.GetTable<Tour>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookingDetails")]
	public partial class BookingDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _booking_id;
		
		private int _tour_id;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<decimal> _price;
		
		private EntityRef<Booking> _Booking;
		
		private EntityRef<Tour> _Tour;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbooking_idChanging(int value);
    partial void Onbooking_idChanged();
    partial void Ontour_idChanging(int value);
    partial void Ontour_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
		
		public BookingDetail()
		{
			this._Booking = default(EntityRef<Booking>);
			this._Tour = default(EntityRef<Tour>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int booking_id
		{
			get
			{
				return this._booking_id;
			}
			set
			{
				if ((this._booking_id != value))
				{
					if (this._Booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbooking_idChanging(value);
					this.SendPropertyChanging();
					this._booking_id = value;
					this.SendPropertyChanged("booking_id");
					this.Onbooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int tour_id
		{
			get
			{
				return this._tour_id;
			}
			set
			{
				if ((this._tour_id != value))
				{
					if (this._Tour.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontour_idChanging(value);
					this.SendPropertyChanging();
					this._tour_id = value;
					this.SendPropertyChanged("tour_id");
					this.Ontour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_BookingDetail", Storage="_Booking", ThisKey="booking_id", OtherKey="booking_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Booking Booking
		{
			get
			{
				return this._Booking.Entity;
			}
			set
			{
				Booking previousValue = this._Booking.Entity;
				if (((previousValue != value) 
							|| (this._Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking.Entity = null;
						previousValue.BookingDetails.Remove(this);
					}
					this._Booking.Entity = value;
					if ((value != null))
					{
						value.BookingDetails.Add(this);
						this._booking_id = value.booking_id;
					}
					else
					{
						this._booking_id = default(int);
					}
					this.SendPropertyChanged("Booking");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_BookingDetail", Storage="_Tour", ThisKey="tour_id", OtherKey="tour_id", IsForeignKey=true)]
		public Tour Tour
		{
			get
			{
				return this._Tour.Entity;
			}
			set
			{
				Tour previousValue = this._Tour.Entity;
				if (((previousValue != value) 
							|| (this._Tour.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Tour.Entity = null;
						previousValue.BookingDetails.Remove(this);
					}
					this._Tour.Entity = value;
					if ((value != null))
					{
						value.BookingDetails.Add(this);
						this._tour_id = value.tour_id;
					}
					else
					{
						this._tour_id = default(int);
					}
					this.SendPropertyChanged("Tour");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customers")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _customer_id;
		
		private string _customer_name;
		
		private string _email;
		
		private string _address;
		
		private string _numberphone;
		
		private System.Nullable<System.DateTime> _dob;
		
		private System.Nullable<int> _user_id;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncustomer_idChanging(int value);
    partial void Oncustomer_idChanged();
    partial void Oncustomer_nameChanging(string value);
    partial void Oncustomer_nameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnnumberphoneChanging(string value);
    partial void OnnumberphoneChanged();
    partial void OndobChanging(System.Nullable<System.DateTime> value);
    partial void OndobChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
		
		public Customer()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_name", DbType="NVarChar(50)")]
		public string customer_name
		{
			get
			{
				return this._customer_name;
			}
			set
			{
				if ((this._customer_name != value))
				{
					this.Oncustomer_nameChanging(value);
					this.SendPropertyChanging();
					this._customer_name = value;
					this.SendPropertyChanged("customer_name");
					this.Oncustomer_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(100)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberphone", DbType="VarChar(12)")]
		public string numberphone
		{
			get
			{
				return this._numberphone;
			}
			set
			{
				if ((this._numberphone != value))
				{
					this.OnnumberphoneChanging(value);
					this.SendPropertyChanging();
					this._numberphone = value;
					this.SendPropertyChanged("numberphone");
					this.OnnumberphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dob", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> dob
		{
			get
			{
				return this._dob;
			}
			set
			{
				if ((this._dob != value))
				{
					this.OndobChanging(value);
					this.SendPropertyChanging();
					this._dob = value;
					this.SendPropertyChanged("dob");
					this.OndobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer", Storage="_User", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true, DeleteRule="SET NULL")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bookings")]
	public partial class Booking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _booking_id;
		
		private System.Nullable<int> _customer_id;
		
		private System.Nullable<System.DateTime> _booking_date;
		
		private System.Nullable<System.DateTime> _delivery_date;
		
		private System.Nullable<bool> _ispayment;
		
		private System.Nullable<bool> _isship;
		
		private System.Nullable<bool> _isreceived;
		
		private string _status;
		
		private EntitySet<BookingDetail> _BookingDetails;
		
		private EntitySet<Payment> _Payments;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbooking_idChanging(int value);
    partial void Onbooking_idChanged();
    partial void Oncustomer_idChanging(System.Nullable<int> value);
    partial void Oncustomer_idChanged();
    partial void Onbooking_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbooking_dateChanged();
    partial void Ondelivery_dateChanging(System.Nullable<System.DateTime> value);
    partial void Ondelivery_dateChanged();
    partial void OnispaymentChanging(System.Nullable<bool> value);
    partial void OnispaymentChanged();
    partial void OnisshipChanging(System.Nullable<bool> value);
    partial void OnisshipChanged();
    partial void OnisreceivedChanging(System.Nullable<bool> value);
    partial void OnisreceivedChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Booking()
		{
			this._BookingDetails = new EntitySet<BookingDetail>(new Action<BookingDetail>(this.attach_BookingDetails), new Action<BookingDetail>(this.detach_BookingDetails));
			this._Payments = new EntitySet<Payment>(new Action<Payment>(this.attach_Payments), new Action<Payment>(this.detach_Payments));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int booking_id
		{
			get
			{
				return this._booking_id;
			}
			set
			{
				if ((this._booking_id != value))
				{
					this.Onbooking_idChanging(value);
					this.SendPropertyChanging();
					this._booking_id = value;
					this.SendPropertyChanged("booking_id");
					this.Onbooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customer_id", DbType="Int")]
		public System.Nullable<int> customer_id
		{
			get
			{
				return this._customer_id;
			}
			set
			{
				if ((this._customer_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncustomer_idChanging(value);
					this.SendPropertyChanging();
					this._customer_id = value;
					this.SendPropertyChanged("customer_id");
					this.Oncustomer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_date", DbType="Date")]
		public System.Nullable<System.DateTime> booking_date
		{
			get
			{
				return this._booking_date;
			}
			set
			{
				if ((this._booking_date != value))
				{
					this.Onbooking_dateChanging(value);
					this.SendPropertyChanging();
					this._booking_date = value;
					this.SendPropertyChanged("booking_date");
					this.Onbooking_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_delivery_date", DbType="Date")]
		public System.Nullable<System.DateTime> delivery_date
		{
			get
			{
				return this._delivery_date;
			}
			set
			{
				if ((this._delivery_date != value))
				{
					this.Ondelivery_dateChanging(value);
					this.SendPropertyChanging();
					this._delivery_date = value;
					this.SendPropertyChanged("delivery_date");
					this.Ondelivery_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ispayment", DbType="Bit")]
		public System.Nullable<bool> ispayment
		{
			get
			{
				return this._ispayment;
			}
			set
			{
				if ((this._ispayment != value))
				{
					this.OnispaymentChanging(value);
					this.SendPropertyChanging();
					this._ispayment = value;
					this.SendPropertyChanged("ispayment");
					this.OnispaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isship", DbType="Bit")]
		public System.Nullable<bool> isship
		{
			get
			{
				return this._isship;
			}
			set
			{
				if ((this._isship != value))
				{
					this.OnisshipChanging(value);
					this.SendPropertyChanging();
					this._isship = value;
					this.SendPropertyChanged("isship");
					this.OnisshipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isreceived", DbType="Bit")]
		public System.Nullable<bool> isreceived
		{
			get
			{
				return this._isreceived;
			}
			set
			{
				if ((this._isreceived != value))
				{
					this.OnisreceivedChanging(value);
					this.SendPropertyChanging();
					this._isreceived = value;
					this.SendPropertyChanged("isreceived");
					this.OnisreceivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(20)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_BookingDetail", Storage="_BookingDetails", ThisKey="booking_id", OtherKey="booking_id")]
		public EntitySet<BookingDetail> BookingDetails
		{
			get
			{
				return this._BookingDetails;
			}
			set
			{
				this._BookingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Payment", Storage="_Payments", ThisKey="booking_id", OtherKey="booking_id")]
		public EntitySet<Payment> Payments
		{
			get
			{
				return this._Payments;
			}
			set
			{
				this._Payments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Booking", Storage="_User", ThisKey="customer_id", OtherKey="user_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._customer_id = value.user_id;
					}
					else
					{
						this._customer_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingDetails(BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Booking = this;
		}
		
		private void detach_BookingDetails(BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Booking = null;
		}
		
		private void attach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Booking = this;
		}
		
		private void detach_Payments(Payment entity)
		{
			this.SendPropertyChanging();
			entity.Booking = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payments")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _payment_id;
		
		private System.Nullable<int> _booking_id;
		
		private string _payment_method;
		
		private System.Nullable<decimal> _amount;
		
		private System.Nullable<System.DateTime> _payment_date;
		
		private string _status;
		
		private EntityRef<Booking> _Booking;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onpayment_idChanging(int value);
    partial void Onpayment_idChanged();
    partial void Onbooking_idChanging(System.Nullable<int> value);
    partial void Onbooking_idChanged();
    partial void Onpayment_methodChanging(string value);
    partial void Onpayment_methodChanged();
    partial void OnamountChanging(System.Nullable<decimal> value);
    partial void OnamountChanged();
    partial void Onpayment_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onpayment_dateChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Payment()
		{
			this._Booking = default(EntityRef<Booking>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booking_id", DbType="Int")]
		public System.Nullable<int> booking_id
		{
			get
			{
				return this._booking_id;
			}
			set
			{
				if ((this._booking_id != value))
				{
					if (this._Booking.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbooking_idChanging(value);
					this.SendPropertyChanging();
					this._booking_id = value;
					this.SendPropertyChanged("booking_id");
					this.Onbooking_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_method", DbType="NVarChar(50)")]
		public string payment_method
		{
			get
			{
				return this._payment_method;
			}
			set
			{
				if ((this._payment_method != value))
				{
					this.Onpayment_methodChanging(value);
					this.SendPropertyChanging();
					this._payment_method = value;
					this.SendPropertyChanged("payment_method");
					this.Onpayment_methodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this.OnamountChanging(value);
					this.SendPropertyChanging();
					this._amount = value;
					this.SendPropertyChanged("amount");
					this.OnamountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> payment_date
		{
			get
			{
				return this._payment_date;
			}
			set
			{
				if ((this._payment_date != value))
				{
					this.Onpayment_dateChanging(value);
					this.SendPropertyChanging();
					this._payment_date = value;
					this.SendPropertyChanged("payment_date");
					this.Onpayment_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50)")]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Booking_Payment", Storage="_Booking", ThisKey="booking_id", OtherKey="booking_id", IsForeignKey=true, DeleteRule="CASCADE")]
		public Booking Booking
		{
			get
			{
				return this._Booking.Entity;
			}
			set
			{
				Booking previousValue = this._Booking.Entity;
				if (((previousValue != value) 
							|| (this._Booking.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Booking.Entity = null;
						previousValue.Payments.Remove(this);
					}
					this._Booking.Entity = value;
					if ((value != null))
					{
						value.Payments.Add(this);
						this._booking_id = value.booking_id;
					}
					else
					{
						this._booking_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Booking");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TourCategories")]
	public partial class TourCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _category_id;
		
		private string _category_name;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    #endregion
		
		public TourCategory()
		{
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCategory_Tour", Storage="_Tours", ThisKey="category_id", OtherKey="category_id")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.TourCategory = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.TourCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tours")]
	public partial class Tour : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _tour_id;
		
		private string _tour_name;
		
		private string _description;
		
		private decimal _price;
		
		private string _image;
		
		private int _category_id;
		
		private System.Nullable<System.DateTime> _createdAt;
		
		private int _user_id;
		
		private System.Nullable<int> _quantity_instock;
		
		private System.Nullable<bool> _stock_warning;
		
		private EntitySet<BookingDetail> _BookingDetails;
		
		private EntityRef<TourCategory> _TourCategory;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontour_idChanging(int value);
    partial void Ontour_idChanged();
    partial void Ontour_nameChanging(string value);
    partial void Ontour_nameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void Oncategory_idChanging(int value);
    partial void Oncategory_idChanged();
    partial void OncreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedAtChanged();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void Onquantity_instockChanging(System.Nullable<int> value);
    partial void Onquantity_instockChanged();
    partial void Onstock_warningChanging(System.Nullable<bool> value);
    partial void Onstock_warningChanged();
    #endregion
		
		public Tour()
		{
			this._BookingDetails = new EntitySet<BookingDetail>(new Action<BookingDetail>(this.attach_BookingDetails), new Action<BookingDetail>(this.detach_BookingDetails));
			this._TourCategory = default(EntityRef<TourCategory>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int tour_id
		{
			get
			{
				return this._tour_id;
			}
			set
			{
				if ((this._tour_id != value))
				{
					this.Ontour_idChanging(value);
					this.SendPropertyChanging();
					this._tour_id = value;
					this.SendPropertyChanged("tour_id");
					this.Ontour_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tour_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string tour_name
		{
			get
			{
				return this._tour_name;
			}
			set
			{
				if ((this._tour_name != value))
				{
					this.Ontour_nameChanging(value);
					this.SendPropertyChanging();
					this._tour_name = value;
					this.SendPropertyChanged("tour_name");
					this.Ontour_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int NOT NULL")]
		public int category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._TourCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL")]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity_instock", DbType="Int")]
		public System.Nullable<int> quantity_instock
		{
			get
			{
				return this._quantity_instock;
			}
			set
			{
				if ((this._quantity_instock != value))
				{
					this.Onquantity_instockChanging(value);
					this.SendPropertyChanging();
					this._quantity_instock = value;
					this.SendPropertyChanged("quantity_instock");
					this.Onquantity_instockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stock_warning", DbType="Bit")]
		public System.Nullable<bool> stock_warning
		{
			get
			{
				return this._stock_warning;
			}
			set
			{
				if ((this._stock_warning != value))
				{
					this.Onstock_warningChanging(value);
					this.SendPropertyChanging();
					this._stock_warning = value;
					this.SendPropertyChanged("stock_warning");
					this.Onstock_warningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Tour_BookingDetail", Storage="_BookingDetails", ThisKey="tour_id", OtherKey="tour_id")]
		public EntitySet<BookingDetail> BookingDetails
		{
			get
			{
				return this._BookingDetails;
			}
			set
			{
				this._BookingDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TourCategory_Tour", Storage="_TourCategory", ThisKey="category_id", OtherKey="category_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TourCategory TourCategory
		{
			get
			{
				return this._TourCategory.Entity;
			}
			set
			{
				TourCategory previousValue = this._TourCategory.Entity;
				if (((previousValue != value) 
							|| (this._TourCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TourCategory.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._TourCategory.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._category_id = value.category_id;
					}
					else
					{
						this._category_id = default(int);
					}
					this.SendPropertyChanged("TourCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tour", Storage="_User", ThisKey="user_id", OtherKey="user_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Tours.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Tours.Add(this);
						this._user_id = value.user_id;
					}
					else
					{
						this._user_id = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookingDetails(BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Tour = this;
		}
		
		private void detach_BookingDetails(BookingDetail entity)
		{
			this.SendPropertyChanging();
			entity.Tour = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private string _username;
		
		private string _password;
		
		private string _role;
		
		private string _image;
		
		private System.Nullable<System.DateTime> _createdAt;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Booking> _Bookings;
		
		private EntitySet<Tour> _Tours;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnroleChanging(string value);
    partial void OnroleChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OncreatedAtChanging(System.Nullable<System.DateTime> value);
    partial void OncreatedAtChanged();
    #endregion
		
		public User()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Bookings = new EntitySet<Booking>(new Action<Booking>(this.attach_Bookings), new Action<Booking>(this.detach_Bookings));
			this._Tours = new EntitySet<Tour>(new Action<Tour>(this.attach_Tours), new Action<Tour>(this.detach_Tours));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role", DbType="NVarChar(20)")]
		public string role
		{
			get
			{
				return this._role;
			}
			set
			{
				if ((this._role != value))
				{
					this.OnroleChanging(value);
					this.SendPropertyChanging();
					this._role = value;
					this.SendPropertyChanged("role");
					this.OnroleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="NVarChar(255)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdAt", DbType="DateTime")]
		public System.Nullable<System.DateTime> createdAt
		{
			get
			{
				return this._createdAt;
			}
			set
			{
				if ((this._createdAt != value))
				{
					this.OncreatedAtChanging(value);
					this.SendPropertyChanging();
					this._createdAt = value;
					this.SendPropertyChanged("createdAt");
					this.OncreatedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Customer", Storage="_Customers", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Booking", Storage="_Bookings", ThisKey="user_id", OtherKey="customer_id")]
		public EntitySet<Booking> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Tour", Storage="_Tours", ThisKey="user_id", OtherKey="user_id")]
		public EntitySet<Tour> Tours
		{
			get
			{
				return this._Tours;
			}
			set
			{
				this._Tours.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Bookings(Booking entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Tours(Tour entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
}
#pragma warning restore 1591
